- name: Create pihole directory
  ansible.builtin.file:
    path: "/home/{{ ansible_user }}/pihole"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    state: directory
    mode: "0755"

- name: Get IPv6 link local address
  ansible.builtin.set_fact:
    ipv6: "{{ item.address }}"
  loop: "{{ vars['ansible_' + ansible_default_ipv6.interface | default(ansible_default_ipv4.interface)].ipv6 }}"
  loop_control:
    label: "{{ item.address }}"
  when: "'link' in item.scope"

- name: Determine Pi-hole host IPs (HA mode)
  ansible.builtin.set_fact:
    pihole_local_ipv4: "{{ pihole_vip_ipv4.split('/')[0] }}"
    pihole_local_ipv6: "{{ pihole_vip_ipv6.split('/')[0] }}"
    execution_mode: "HA setup with keepalived"
  when: pihole_ha_mode

- name: Determine Pi-hole host IPs (single mode)
  ansible.builtin.set_fact:
    pihole_local_ipv4: "{{ ansible_host }}"
    pihole_local_ipv6: "{{ ipv6 }}"
    execution_mode: "single node setup"
  when: not pihole_ha_mode

- name: Start/Update pihole container
  community.docker.docker_container:
    name: pihole
    image: pihole/pihole:2024.05.0
    pull: true
    restart_policy: unless-stopped
    env:
      TZ: "{{ timezone }}"
      WEBPASSWORD: "{{ pihole_webpassword }}"
      PIHOLE_DNS_: "{{ pihole_dns }}"
      DNSMASQ_LISTENING: "local"
      REV_SERVER: "{{ pihole_rev_server }}"
      REV_SERVER_DOMAIN: "{{ pihole_rev_server_domain }}"
      REV_SERVER_TARGET: "{{ pihole_rev_server_target }}"
      REV_SERVER_CIDR: "{{ pihole_rev_server_cidr }}"
      FTLCONF_MAXDBDAYS: "{{ pihole_ftl_max_db_days }}"
    dns_servers:
      - 127.0.0.1
      - "{{ static_dns }}"
    network_mode: host
    volumes:
      - "/home/{{ ansible_user }}/pihole/pihole/:/etc/pihole/"
      - "/home/{{ ansible_user }}/pihole/dnsmasq.d/:/etc/dnsmasq.d/"
    log_driver: json-file
    log_options:
      max-size: "10m"
      max-file: "5"
    capabilities:
      - CAP_NET_BIND_SERVICE
      - CAP_NET_RAW
      - CAP_NET_ADMIN
      - CAP_SYS_NICE
      - CAP_CHOWN

- name: Check pihole container
  ansible.builtin.uri:
    url: http://localhost/admin
  register: result
  until: result.status == 200
  retries: 5
  delay: 10

- name: Wait until the dir present before continuing
  ansible.builtin.wait_for:
    path: /home/{{ ansible_user }}/pihole/dnsmasq.d/
    state: present

- name: Copy 42-reverse-proxied-subdomains.conf
  ansible.builtin.copy:
    dest: "/home/{{ ansible_user }}/pihole/dnsmasq.d/"
    src: 42-reverse-proxied-subdomains.conf
    mode: "0644"

- name: Remove old image versions
  community.docker.docker_prune:
    images: true
    images_filters:
      dangling: false

- name: INFORMATION
  ansible.builtin.debug:
    msg:
      - "In the {{ execution_mode }} make sure to point your DNS server settings here:"
      - "DNSv4: {{ pihole_local_ipv4 }}"
      - "DNSv6: {{ pihole_local_ipv6 }}"
